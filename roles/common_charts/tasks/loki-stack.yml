---
- name: Create Namespace - loki-system
  k8s:
    state: present
    definition: "{{ lookup('template', '../global_templates/namespace-system.yml.j2') }}"
    #kubeconfig: "{{ kubeconfig_file_path }}"
    context: "{{ kube_context }}"
  vars:
    namespace_name: loki-system
    # we need to leave this namespace as privileged for now because the promtail chart
    # does not support deploying to another namespace, and requires root access to scrape logs.
    # TODO - install promtail chart seperately to kube-system namespace and change loki-system to restricted
    pss_policy_level: privileged

# Configure the helm repository on the deployment host. This
# adds the loki helm repository and updates the list
# of available helm charts.

- name: Add loki stack chart repo
  kubernetes.core.helm_repository:
    name: loki
    repo_url: "{{ grafana_helm_chart_repo }}"


# Install the Loki Stack to the logging-system namespace
- name: Template values file of Loki and Promtail
  block:
    # Create a temporary file in deployment host
    # filesystem for the Loki Stack values file.
    - name: Create loki-stack Values File
      tempfile:
        state: file
        suffix: loki-values
      register: loki_values
      changed_when: false

    # Convert the values.loki_stack.yml.j2 file located within the
    # templates folder to a template file and associate it with the
    # previously made temporary file.
    - name: Template loki-stack Values File
      template:
        src: values.loki_stack.yml.j2
        dest: "{{ loki_values.path }}"
      diff: no
      changed_when: false


    # Install Loki Stack using the helm chart and apply the values template.
    # If ansible is running in check mode, then this will run helm with the diff option.
- name: Deploy Loki stack with values loaded from template
  kubernetes.core.helm:
    name: loki
    chart_ref: loki/loki-stack
    chart_version: "{{ loki_stack_helm_chart_version }}"
    release_namespace: loki-system
    context: "{{ kube_context }}"
    values: "{{ lookup('template', '{{ loki_values.path }}') | from_yaml }}"
    wait: true
